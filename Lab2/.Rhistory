x=3
x=x+3
?lm
example(lm)
x*y+1
x=3
y=2
x*y+1
x=3
y=2
x*y+1
x=3
y=2
z=x*y+1
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
?neuralnet
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
?neuralnet
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
relu(5)
relu(-2)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
softplus(5)
softplus(2)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
View(nn_linear)
View(nn_softplus)
View(nn)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
newpred
newPred
newTest[,1]
newPred
newTest[,1]
pred
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
newPred
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
?neuralnet
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
sum(test[])
View(test)
sum(test[,2])
sum(predict(nn_linear, test))
newPred
sort(newPred)
nn
nn
nn$weights
View(nn)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
View(nn)
nn$weights
nn
View(nn)
nn[["weights"]][[1]][[1]]
nn[["weights"]][[1]][[2]]
nn[["weights"]][[1]][[1]]
nn[["weights"]]
nn$weights
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
nn
gwplot(nn)
nn$generalized.weights
nn$weights
nn
nn$weights
nn
nn$weights
nn$weights
winit
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
winit
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
nn$weights
nn$weights$
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
g
g[1]
g[2]
g[1]
g[1]
g
View(g)
g[1][1]
g[[1]][[1]]
g[[1]][[2]]
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
nn$weights[[1]][[1]]
nn$weights[[2]][[2]]
View(g)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
nn$weights[[2]][[2]]
nn$weights[[1]][[2]]
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
nn$weights[[1]][[2]]''
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
x_to_hidden
hidden_to_y
sum(x_to_hidden[1,])
sum/hidden_to_y
sum(hidden_to_y)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
sum/hidden_to_y> sum(hidden_to_y)?
?
?plot.nn
?plot
?plot(nn)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
gwplot(nn)
Sin
sigmoided
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
sigmoided
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
sigmoided
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
sigmoided
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment1.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
View(data)
library(neuralnet)
library(ggplot2)
set.seed(1234567890)
#generate 500 points that are uniformly distributed, min=0 max=10 indicate U[0,10],
generatedVars <- runif(n=500, min=0, max=10)
#apply sin function to each variable
#data2 <-data.frame(generatedVars, sin(generatedVars))
data <-data.frame("x" = generatedVars, "sin(x)" = sin(generatedVars)) #same as above, but name columns here!
#don't need to shuffle or set seed  since data is already random from generation
train <- data[1:25,]
test <- data[26:500,]
View(data)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
source("E:/kod/TDDE01/Lab3/lab3assignment3.R", echo=TRUE)
converge <- function(x) {
sigmoided = (1 / (1 + exp(- x%*%w1+b1)))
print(sigmoided,) #1 or 0
sin = (sigmoided)%*%(w2)+b2
print(sin)
}
converge(50)
converge(100)
converge(200)
converge(300)
converge(400)
converge(500)
converge(1000)
converge(10000)
converge <- function(x) {
sigmoided = (1 / (1 + exp(- x%*%w1+b1)))
print(sigmoided,) #1 or 0
sin = (sigmoided)%*%(w2)+b2
print(sin)
}
converge(50)
converge(100)
converge(200)
converge(300)
converge(400)
converge(500)
converge(1000)
converge(10000)
setwd("E:/kod/TDDE01/Lab2")
source("E:/kod/TDDE01/Lab2/lab2assignment3.R", echo=TRUE)
theta_opt
source("E:/kod/TDDE01/Lab2/lab2assignment1.R", echo=TRUE)
